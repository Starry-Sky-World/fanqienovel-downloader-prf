name: Build, Package, and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Build with PyInstaller (Linux)
      run: |
        cd src
        pip install pyinstaller
        pyinstaller --onefile main.py
        mv dist/main ../dist/linux_package

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: linux-package
        path: dist/linux_package

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Build with PyInstaller (Windows)
      run: |
        cd src
        pip install pyinstaller
        pyinstaller --onefile main.py
        mv dist/main.exe ../dist/windows_package.exe

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-package
        path: dist/windows_package.exe

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Build with PyInstaller (MacOS)
      run: |
        cd src
        pip install pyinstaller
        pyinstaller --onefile main.py
        mv dist/main ../dist/macos_package

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: macos-package
        path: dist/macos_package

  create-release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure Git
      run: |
        git config --global user.name "GithubAction"
        git config --global user.email "GithubAction@github.com"

    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        DATE=$(date +'%Y%m%d')
        TAG="AutoBuild_$DATE"
        gh release create $TAG dist/linux_package dist/windows_package.exe dist/macos_package --title "AutoBuild $DATE" --notes "Automated build and packaging"
